# This is a list of what you should do first right after ubuntu installation.
# ubuntu 22.04
# Make sure that your internet connection is very good.


# Get on any video website, like youku, click on any video window, the information would lead you to download the flash player deb, then just click on the "Install" of the deb GUI.


# Update all the installed apps.
sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
sudo apt-get autoremove
sudo apt-get autoclean
sudo apt-get clean


# for Ubuntu 22.04 LTS, IBus Chinese Input System works fine
# settings--->Regions & Languages--->Manage Installed Languages--->Install/Remove Languages--->Chinese (simplified) check--->Reboot

sudo apt-get install ibus-libpinyin



# Java
# The versions may be updated, always check for the latest releases

sudo apt-get update
sudo apt-get install openjdk-18-jdk # the open java
java # check if it's been already installed
sudo update-alternatives --config java # switch among the default java versions
java -version # check the default java version for now


# apt management GUI
sudo apt-get install synaptic gdebi


# Multimedia support
sudo apt-get install vlc mplayer smplayer handbrake
sudo apt-get install ubuntu-restricted-extras
sudo apt-get install ffmpeg ffmpeg-doc lame lame-doc


# Illustration
sudo apt-get install gimp gimp-plugin-regsistry gimp-data-extras darktable pinta inkscape


# DVD/CD burning
sudo apt-get install xfburn devhelp


# tar, zip, rar...
sudo apt-get install unace rar unrar zip unzip p7zip-full p7zip-rar sharutils uudeview mpack arj


# Windows simulation & Games
sudo apt-get install steam wine winetricks


# Bing Wallpaper
sudo snap install bing-wall



# Anaconda, a Python version for data science

# Installation
# Get on the Anaconda official website, download the installation sh file
bash your/path/to/the/sh # like ~/Downloads/Anaconda3-2022.xx-inux-x86_64.sh
                         # just the name of the sh file like Anaconda3-2022.xx-inux-x86_64.sh if the file was right in the /home/user(~) directory
conda # may not work, need to refresh the environment variables
source ~/.bashrc # refresh the environment variables (the hidden .bashrc file), now the conda should work
                 # (base) showed up
conda
conda -h/--help
conda -V/--version
conda deactivate/activate # get rid of/ recall the (base) temporarily, it will show up after shut down and re-open the terminal
conda config --show # shows the default config of anaconda, search for "auto_activate_base: True"
conda config --set auto_activate_base False # if it's True, reset it to False, this should kill the (base) problem
# Uninstallation, when re-installation is needed. Sometimes anaconda may work inappropriately after updating.
conda install anaconda-clean # anaconda-clean creates data files and backup files, NOT necessary if nothing to be reserved.
anaconda-clean/anaconda-clean --yes
sudo rm -rf your/path/to/the/anaconda3/directory # like /home/user(~)/anaconda3/
                                                 # the key of uninstallation
sudo gedit ~/.bashrc
delete everything manually (the whole paragraph)
from
# >>> conda initialize >>>
# !! contents within this block are managed by 'conda init' !!
to
unset __conda_setup
# <<< conda initialize <<<
source ~/.bashrc # refresh the environment variables (the hidden .bashrc file)

# when activating conda command after adding the "conda-forge" channel and updating the anaconda, you may encounter the following
# Error while loading conda entry point: conda-libmamba-solver (libarchive.so.19: cannot open shared object file: No such file or directory)
# CondaValueError: you have chosen a non-default solver backend (libmamba) but it was not recognized. Choose one of: classic
# Because the conda cannot find the libarchive.so.19 file when loading conda-libmamba-solver
# First you need to check out whether the libarchive.so.19 exists
sudo find / -name 'libarchive.so.*' 2>/dev/null # locate all the libarchive.so.* files in the whole system
# if you can find the libarchive.so.19 do exist in the ~/anaconda3/pkgs/ directory, but not in the ubuntu system (/usr/lib/x86_64-linux-gnu)
# to make a soft link in the system targeting the anaconda3 libarchive.so.19 file
sudo ln -s ~/anaconda3/pkgs/libarchive-3.6.2-h6ac8c49_2/lib/libarchive.so.19 /usr/lib/x86_64-linux-gnu/

# when starting the anaconda jupyter-lab, if you encounter with the following
# ImportError: cannot import name 'has_suggestion' from 'prompt_toolkit.filter'
# to fix this error
# First check out the location of the file that goes wrong
# then uninstall/remove the wrong file and re-install it.
# if it's in the system's own python directory, then
pip uninstall prompt_toolkit
pip install prompt_toolkit
# or otherwise if it's in the anaconda's python directory, then
conda remove prompt_toolkit
conda install prompt_toolkit



# Visual Studio Code, a free, powerful and easy-handling IDE for python
# Get on the VSCode official website, download the installation deb file
# Follow the instructions on the VSCode official website: https://code.visualstudio.com/docs/python/python-tutorial
sudo apt install your/COMPLETE/path/to/the/deb # like /home/user/code_xxxxxx_amd64.deb
# put the following codes inside the [] of keybindings.json, for keyboard shortcuts setting
'''
{
        "key": "shift+meta+enter",
        "command": "python.execInTerminal-icon"
    },
    {
        "key": "shift+meta+enter",
        "command": "python.execInTerminal"
    },
    {
        "key": "` 1",
        "command": "workbench.action.terminal.focusAtIndex1"
    },
    {
        "key": "` 2",
        "command": "workbench.action.terminal.focusAtIndex2"
    },
    {
        "key": "` 3",
        "command": "workbench.action.terminal.focusAtIndex3"
    },
    {
        "key": "` i",
        "command": "interactive.input.focus"
    },
    {
        "key": "shift+alt+f",
        "command": "jupyter.runfromline"
    },
    {
        "key": "shift+alt+t",
        "command": "jupyter.runtoline"
    },
    {
        "key": "shift+alt+j",
        "command": "ipynb.newUntitledIpynb"
    },
    {
        "key": "shift+alt+i",
        "command": "jupyter.createnewinteractive"
    }
'''
# put the following codes in the settings.json file, for preference setting
'''
{
    "workbench.colorTheme": "Monokai",
    "git.ignoreLegacyWarning": true,
    "remote.SSH.showLoginTerminal": true,
    "python.defaultInterpreterPath": "/home/yansson/anaconda3/bin/python",
    "terminal.integrated.inheritEnv": false,
    "[python]": {
        "editor.formatOnType": true
    },
    "scm.inputFontSize": 14,
    "markdown.preview.fontSize": 13
}
'''



# R

# The ubuntu default universal repository, easy-handling but the version of which is always half a year later than the latest from CRAN
sudo apt-get install r-base
sudo R # run the R in ubuntu Terminal

# or, get on the offical CRAN gwebsite https://cloud.r-project.org/, follow the instructions

pip3/pip install rpy2 # rpy2 could only be installed properly AFTER the installation of R
pip3 install -U radian # radian, a 21 century R console, https://github.com/randy3k/radian

# Rstudio
# Get on the Rstudio official website, download the installation deb file, and click on the "Install" of the deb GUI



# git
sudo apt-get build-dep git-all
sudo apt-get install git-all

# my ubuntu goes wrong here, with error information "runit git-daemon-run E: Sub-process /usr/bin/dpkg returned an error code (1)"
# the following series of commands will fix this:

sudo mv /var/lib/dpkg/info/ /var/lib/dpkg/info_old
sudo mkdir /var/lib/dpkg/info/
sudo apt-get update
sudo apt-get -f install
sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old/
sudo rm -rf /var/lib/dpkg/info
sudo mv /var/lib/dpkg/info_old/ /var/lib/dpkg/info/

# connect with remote github repositories
# first check the ~/.ssh/id_rsa & id_rsa.pub, if there's NO such things:

ssh-keygen -t rsa -C "email@githubregistration.com"
# github.com -> settings -> Add SSH keys -> copy id_rsa.pub contents in -> Add Key



# Zotero
# Build up the zotero database link on Windows
# type the following commands on the commandline as Administrator

cd "C:\Users\YANG Song\Zotero"
dir # check if the "storage" directory is there
# if it does, delete it
mklink /d ".\storage" "D:\BaiduSyncdisk\storage"
